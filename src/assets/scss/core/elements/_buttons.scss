.svg-icon-right {
  pointer-events: none;
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  display: block;
    font-size: 16px;
    line-height: 24px;
    letter-spacing: 1.5px;
    padding: 11px 15px;
    height: 48px;
    border-radius: 0;
    box-shadow: none;
    max-width: 100%;
    width: 100%;
}
.button {
  display: inline-flex;
  @include font-size(button);
  @include font-weight(button);
  padding: (
      (
          $button-form--height - get-line-height(button) -
            ($button-form--border-width * 2)
        ) / 2
    )
    ($button--padding-h - $button-form--border-width);
  height: $button-form--height;
  text-decoration: none !important;
  text-transform: $button--transform;
  color: color(button-light);
  background-color: color-bg(button-light);
  border-width: $button-form--border-width;
  border-style: $button-form--border-style;
  border-color: color-border(button-light);
  border-radius: $button--radius;
  cursor: pointer;
  justify-content: center;
  text-align: center;
  letter-spacing: inherit;
  white-space: nowrap;
  transition: background 0.15s ease;

  &:active {
    outline: 0;
  }

  &:hover {
    // background-color: color-bg(button-light-hover);
    // border-color: color-border(button-light-hover);
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(get-color(dark, 2), 0.2);
    &::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0;
    }
  }
  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(get-color(dark, 2), 0.2);
  }

  &.is-loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;

    &::after {
      content: '';
      display: block;
      position: absolute;
      width: get-line-height(button);
      height: get-line-height(button);
      margin-left: -(get-line-height(button) / 2);
      margin-top: -(get-line-height(button) / 2);
      top: 50%;
      left: 50%;
      border: $button-loading--thickness solid color(button-light);
      border-radius: 50%;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      z-index: 1;
      animation: button-loading 0.6s infinite linear;
    }
  }

  &[disabled] {
    cursor: not-allowed;
    color: color(button-disabled);
    background-color: color-bg(button-disabled) !important;
    border-color: color-border(button-disabled);

    &.is-loading {
      &::after {
        border-color: color(button-disabled);
      }
    }
  }
}
.button-link {
  display: inline-flex;
  @include font-size(button);
  @include font-weight(button);
  // padding: (
  //     (
  //         $button-form--height - get-line-height(button) -
  //           ($button-form--border-width * 2)
  //       ) / 2
  //   )
  //   ($button--padding-h - $button-form--border-width);
  // height: $button-form--height;
  // text-decoration: none !important;
  // text-transform: $button--transform;
  // color: color(button-light);
  // background-color: color-bg(button-light);
  // border-width: $button-form--border-width;
  // border-style: $button-form--border-style;
  // border-color: color-border(button-light);
  // border-radius: $button--radius;
  cursor: pointer;
  justify-content: center;
  text-align: center;
  letter-spacing: inherit;
  white-space: nowrap;
  transition: background 0.15s ease;

  &:active {
    outline: 0;
  }

  &:hover {
    // background-color: color-bg(button-light-hover);
    // border-color: color-border(button-light-hover);
    transform: translateY(-0.3rem);
    // box-shadow: 0 1rem 2rem rgba(get-color(dark, 2), 0.2);
    // color: get-color(primaary, 6);
    &::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0;
    }
  }
  &:active {
    transform: translateY(-0.1rem);
    // box-shadow: 0 0.5rem 1rem rgba(get-color(dark, 2), 0.2);
  }

  &.is-loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;

    &::after {
      content: '';
      display: block;
      position: absolute;
      width: get-line-height(button);
      height: get-line-height(button);
      margin-left: -(get-line-height(button) / 2);
      margin-top: -(get-line-height(button) / 2);
      top: 50%;
      left: 50%;
      border: $button-loading--thickness solid color(button-light);
      border-radius: 50%;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      z-index: 1;
      animation: button-loading 0.6s infinite linear;
    }
  }

  &[disabled] {
    cursor: not-allowed;
    color: color(button-disabled);
    background-color: color-bg(button-disabled) !important;
    border-color: color-border(button-disabled);

    &.is-loading {
      &::after {
        border-color: color(button-disabled);
      }
    }
  }
}
.button-square {
  display: inline-flex;
  @include font-size(button);
  @include font-weight(button);
  text-transform: $button--transform;
  //   color: color(button-light);
  cursor: pointer;
  justify-content: center;
  text-align: center;
  letter-spacing: inherit;
  white-space: nowrap;
  transition: background 0.15s ease;
  &:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    height: 5%;
    width: 3px;
    background-color: get-color(secondary, 2);
    transform: scaleY(0);
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0s,
      background-color 0.1s;
  }

  &:hover {
    transform: translateY(-0.3rem);
    border-top: none;
    color: get-color(secondary, 2);
    &::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(get-color(dark, 2), 0.4);
  }
  &:link,
  &:visited {
    color: get-color(dark, 2);
    text-decoration: none;
    text-transform: uppercase;
    display: block;

    display: flex;
    align-items: center;
    position: relative;
    z-index: 10;
  }
}
.active-btn {
  h4 {
    // box-shadow: 0px 2.5px 0px rgba(get-color(secondary, 2), 0.4) !important;
    color: get-color(secondary, 2) !important;
  }
}

.button-sm {
  padding: (
      (
          $button-form-sm--height - get-line-height(button) -
            ($button-form--border-width * 2)
        ) / 2
    )
    ($button-sm--padding-h - $button-form--border-width);
  height: $button-form-sm--height;
}

.button-dark {
  color: color(button-dark);
  background-color: color-bg(button-dark);
  border-color: color-border(button-dark);

  &:hover {
    background-color: color-bg(button-dark-hover);
    border-color: color-border(button-dark-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-dark);
    }
  }
}

.button-primary {
  color: color(button-primary);
  background-color: color-bg(button-primary);
  border-color: color-border(button-primary);

  &:hover {
    background-color: color-bg(button-primary-hover);
    border-color: color-border(button-primary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-primary);
    }
  }
}

.button-secondary {
  color: color(button-secondary);
  background-color: color-bg(button-secondary);
  border-color: color-border(button-secondary);

  &:hover {
    background-color: color-bg(button-secondary-hover);
    border-color: color-border(button-secondary-hover);
  }

  &.is-loading {
    &::after {
      border-color: color(button-secondary);
    }
  }
}

.button-block {
  display: flex;
  width: 100%;
}

.button-group {
  display: flex;
  // flex-wrap: wrap;
  align-items: center;
  margin-right: -($button-group-padding / 2);
  margin-left: -($button-group-padding / 2);
  margin-top: -($button-group-padding / 2);

  &:last-of-type {
    margin-bottom: -($button-group-padding / 2);
  }

  &:not(:last-of-type) {
    margin-bottom: ($button-group-padding / 2);
  }

  > [class*='button'] {
    margin: $button-group-padding / 2;
  }
}

@include media('<=medium') {
  .button-wide-mobile {
    width: 100%;
    max-width: $button--max-size-mobile;
  }
}

@keyframes button-loading {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}
